#!/opt/venv/bin/python
from __future__ import annotations

import sys
import traceback
from typing import Any

import speedtest
from tsd2gspread import Tsd2Gspread


class SpeedTest(Tsd2Gspread):
    """SpeedTest class to get speedtest data and write it to Google Spreadsheet."""

    def __init__(self, **kw) -> None:  # type: ignore[no-untyped-def]
        super().__init__(**kw)

    def get_data(self) -> list[Any]:
        st = speedtest.Speedtest()  # type: ignore[attr-defined] # (wrong mypy error)
        best_server = st.get_best_server()
        server_name = best_server['sponsor']
        server_country = best_server['country']
        server_distance = best_server['d']  # km
        download_speed = st.download() / 1_000_000  # Mbps
        upload_speed = st.upload() / 1_000_000  # Mbps
        ping = best_server['latency']  # ms

        return [
            server_name,
            server_country,
            server_distance,
            download_speed,
            upload_speed,
            ping,
        ]

    def print_data(self) -> None:
        now, name, country, distance, download, upload, ping = self.get_tsd()
        print(f'Datetime    : {now}')
        print(f'Server      : {name} ({country})')
        print(f'Distance    : {distance:.2f} km')
        print(f'Download    : {download:.2f} Mbps')
        print(f'Upload      : {upload:.2f} Mbps')
        print(f'Ping        : {ping:.2f} ms')


if __name__ == '__main__':
    if len(sys.argv) <= 1:
        SpeedTest().print_data()
    else:
        try:
            obj = SpeedTest(config_file=sys.argv[1])
            obj.write()
        except Exception as e:
            print(traceback.format_exc())
            webhook_url = getattr(obj, 'webhook_url', None)
            if webhook_url:
                import requests

                requests.post(
                    webhook_url,
                    json={'text': f'Error at {__file__}: {e}'},
                    timeout=60,
                )
            sys.exit(1)
