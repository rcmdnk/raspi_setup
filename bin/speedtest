#!/opt/venv/bin/python
from __future__ import annotations

import json
import subprocess
import sys
import traceback
from typing import Any

from tsd2gspread import Tsd2Gspread


class SpeedTest(Tsd2Gspread):
    """SpeedTest class to get speedtest data and write it to Google Spreadsheet."""

    def __init__(self, **kw) -> None:  # type: ignore[no-untyped-def]
        super().__init__(**kw)

    def get_data(self) -> list[Any]:
        cmd = ['speedtest', '-f', 'json', '-p', 'no', '--accept-license']
        if server := getattr(self, 'server_id', None):
            cmd.extend(['-s', str(server)])
        result = subprocess.run(
            ['speedtest'], capture_output=True, text=True, check=False
        )
        if result.returncode != 0:
            raise RuntimeError(result.stderr)
        data = json.loads(result.stdout)
        server_id = data['server']['id']
        server_name = data['server']['name']
        server_ip = data['server']['ip']
        isp = data['isp']
        interface_internal_ip = data['interface']['internalIp']
        interface_mac_addr = data['interface']['macAddr']
        interface_external_ip = data['interface']['externalIp']
        ping = data['ping']['latency']
        download = data['download']['bandwidth'] / 125_000  # Mbps
        upload = data['upload']['bandwidth'] / 125_000  # Mbps
        packet_loss = data['packetLoss']

        return [
            server_id,
            server_name,
            server_ip,
            isp,
            interface_internal_ip,
            interface_mac_addr,
            interface_external_ip,
            ping,
            download,
            upload,
            packet_loss,
        ]

    def print_data(self) -> None:
        (
            now,
            server_id,
            server_name,
            server_ip,
            isp,
            interface_internal_ip,
            interface_mac_addr,
            interface_external_ip,
            ping,
            download,
            upload,
            packet_loss,
        ) = self.get_data()
        print(f'Datetime    : {now}')
        print(f'Server ID   : {server_id}')
        print(f'Server Name : {server_name}')
        print(f'Server IP   : {server_ip}')
        print(f'ISP         : {isp}')
        print(f'Internal IP : {interface_internal_ip}')
        print(f'MAC Address : {interface_mac_addr}')
        print(f'External IP : {interface_external_ip}')
        print(f'Ping        : {ping} ms')
        print(f'Download    : {download:.2f} Mbps')
        print(f'Upload      : {upload:.2f} Mbps')
        print(f'Packet Loss : {packet_loss}')


if __name__ == '__main__':
    config_file = None
    if len(sys.argv) > 1:
        config_file = sys.argv[1]
    obj = SpeedTest(config_file=config_file)
    if (
        obj.sheet_name is None
        and obj.sheet_url is None
        and obj.sheet_key is None
    ):
        obj.print_data()
        sys.exit(0)
    try:
        obj.write()
    except Exception as e:
        print(traceback.format_exc())
        webhook_url = getattr(obj, 'webhook_url', None)
        if webhook_url:
            import requests

            requests.post(
                webhook_url,
                json={'text': f'Error at {__file__}: {e}'},
                timeout=60,
            )
        sys.exit(1)
