#!/opt/venv/bin/python
from __future__ import annotations

import sys
import traceback
from datetime import datetime, timedelta
from pathlib import Path
from typing import Any

import requests


def get_code(name: str, name_type: str = 'enName') -> str:
    area = requests.get(
        'https://www.jma.go.jp/bosai/amedas/const/amedastable.json', timeout=10
    ).json()
    for code in area:
        if area[code][name_type] == name:
            return code
    return ''


def get_json(datetime_str: str, code: str) -> dict[str, list[Any]]:
    return requests.get(
        f'https://www.jma.go.jp/bosai/amedas/data/map/{datetime_str}.json',
        timeout=10,
    ).json()[code]


def get_data(code: str, datetime_str: str = '') -> dict[str, list[Any]]:
    if not datetime_str:
        datetime_str = datetime.now().strftime('%Y%m%d%H0000')
        try:
            data = get_json(datetime_str, code)
        except Exception:
            # try to get previous data
            datetime_str = (datetime.now() - timedelta(hours=1)).strftime(
                '%Y%m%d%H0000'
            )
            data = get_json(datetime_str, code)
    else:
        data = get_json(datetime_str, code)
    return data


if __name__ == '__main__':
    try:
        conf = {'area': 'Tokyo', 'log': '/opt/var/amedas'}
        if len(sys.argv) > 1:
            with Path(sys.argv[1]).open() as f:
                for line in f:
                    key_value = line.rstrip().split('#')[0].split('=')
                    if len(key_value) != 2:
                        continue
                    conf[key_value[0]] = key_value[1]
        code = conf.get('code', get_code(conf['area']))
        data = get_data(code)
        with Path(conf['log']).open('w') as f:
            f.write(
                f"{datetime.now().strftime('%Y-%m-%d %H:%M:%S')},{data['temp'][0]},{data['humidity'][0]}"
            )
    except Exception as e:
        print(traceback.format_exc())
        webhook_url = conf.get('webhook_url', '')
        if webhook_url:
            import requests

            requests.post(
                webhook_url,
                json={'text': f'Error at {__file__}: {e}'},
                timeout=60,
            )
        sys.exit(1)
